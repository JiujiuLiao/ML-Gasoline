#set work directory
setwd("C:/TU/EmpiricalMethodsSpatial/GasStation/data")


#loading data
stations <- read.csv("2024-04-25-stations-modify-2.csv")

# basic function we use to replace any brands in the list of current names with a new name
replace_station_name <- function(current_name, new_name){
  A$brand[which(A$brand %in% current_name)] <- new_name
  return(A$brand)
}

# Loading it to a seconds dataframe for testing purposes
A <- stations
brand_table_before <- as.data.frame(table(A$brand))

############## going through different typos and names and combining where reasonable ####################
#all the variants of free gas stations in the bft club (whichis not a company, but for a model we can treat as one)
A$brand <- replace_station_name(unique(grep(pattern = "bft", x = A$brand, ignore.case = TRUE, value = TRUE)),"bft")

# variants of AVIA
A$brand <- replace_station_name(unique(grep(pattern = "avia", x = A$brand, ignore.case = TRUE, value = TRUE)),"AVIA")

#ARAL
A$brand <- replace_station_name(unique(grep(pattern = "aral", x = A$brand, ignore.case = TRUE, value = TRUE)),"ARAL")

#Shell
A$brand <- replace_station_name(unique(grep(pattern = "shell", x = A$brand, ignore.case = TRUE, value = TRUE)),"Shell")

#ESSO - in this case grep includes other brands and there is only one variant
A$brand <- replace_station_name("Esso","ESSO")

#TotalEnergies
A$brand <- replace_station_name(unique(grep(pattern = "total", x = A$brand, ignore.case = TRUE, value = TRUE)),"TotalEnergies")

# AGIP ENI
A$brand <- replace_station_name(unique(grep(pattern = "agip", x = A$brand, ignore.case = TRUE, value = TRUE)),"AGIP ENI")

# Raiffeisen
A$brand <- replace_station_name(unique(grep(pattern = "raiffeisen", x = A$brand, ignore.case = TRUE, value = TRUE)),"Raiffeisen")

# orlen is part of STAR
A$brand <- replace_station_name(unique(grep(pattern = "orlen", x = A$brand, ignore.case = TRUE, value = TRUE)),"STAR")

# tamoil and hem are the same company
A$brand <- replace_station_name(unique(grep(pattern = "tamoil", x = A$brand, ignore.case = TRUE, value = TRUE)),"HEM")

# OIL!
A$brand <- replace_station_name(unique(grep(pattern = "oil!", x = A$brand, ignore.case = TRUE, value = TRUE)),"OIL!")

# variations on free gas station names
A$brand <- replace_station_name(unique(grep(pattern = "frei", x = A$brand, ignore.case = TRUE, value = TRUE)),"Freie Tankstelle")

# Westfalen
A$brand <- replace_station_name(unique(grep(pattern = "westfalen", x = A$brand, ignore.case = TRUE, value = TRUE)),"Westfalen")

# Classic
A$brand <- replace_station_name(unique(grep(pattern = "classic", x = A$brand, ignore.case = TRUE, value = TRUE)),"CLASSIC")

# varaiations on supermarket gas stations
A$brand <- replace_station_name(unique(grep(pattern = "supermarkt", x = A$brand, ignore.case = TRUE, value = TRUE)),"Supermarkt-Tankstelle")

# Hoyer
A$brand <- replace_station_name(unique(grep(pattern = "hoyer", x = A$brand, ignore.case = TRUE, value = TRUE)),"Hoyer")

# EDEKA
A$brand <- replace_station_name(unique(grep(pattern = "edeka", x = A$brand, ignore.case = TRUE, value = TRUE)),"EDEKA")

# Q1
A$brand <- replace_station_name(unique(grep(pattern = "q1", x = A$brand, ignore.case = TRUE, value = TRUE)),"Q1")

# ELAN
A$brand <- replace_station_name(unique(grep(pattern = "elan", x = A$brand, ignore.case = TRUE, value = TRUE)),"ELAN")

# Orlen
A$brand <- replace_station_name(unique(grep(pattern = "orlen", x = A$brand, ignore.case = TRUE, value = TRUE)),"ORLEN")

# PM
A$brand <- replace_station_name(unique(grep(pattern = "pm", x = A$brand, ignore.case = TRUE, value = TRUE)),"PM")

# markant
A$brand <- replace_station_name(unique(grep(pattern = "markant", x = A$brand, ignore.case = TRUE, value = TRUE)),"Markant")

# NORDOEL
A$brand <- replace_station_name(unique(grep(pattern = "nordoel", x = A$brand, ignore.case = TRUE, value = TRUE)),"NORDOEL")

# Globus
A$brand <- replace_station_name(unique(grep(pattern = "globus", x = A$brand, ignore.case = TRUE, value = TRUE)),"Globus")

brand_table_after <- as.data.frame(table(A$brand))

############ adding a columns combining small brands into one group #################

brand_100 <- brand_table_after[brand_table_after$Freq > 100,]
A$brand_100[A$brand %in% brand_100$Var1] <- A$brand[A$brand %in% brand_100$Var1]
A$brand_100[!A$brand %in% brand_100$Var1] <- "<100 stations brand"
brand_table_100 <- as.data.frame(table(A$brand_100))

brand_40 <- brand_table_after[brand_table_after$Freq > 40,]
A$brand_40[A$brand %in% brand_40$Var1] <- A$brand[A$brand %in% brand_40$Var1]
A$brand_40[!A$brand %in% brand_40$Var1] <- "<40 stations brand"
brand_table_40 <- as.data.frame(table(A$brand_40))

brand_10 <- brand_table_after[brand_table_after$Freq > 10,]
A$brand_10[A$brand %in% brand_10$Var1] <- A$brand[A$brand %in% brand_10$Var1]
A$brand_10[!A$brand %in% brand_10$Var1] <- "<10 stations brand"
brand_table_10 <- as.data.frame(table(A$brand_10))

brand_5 <- brand_table_after[brand_table_after$Freq > 5,]
A$brand_5[A$brand %in% brand_5$Var1] <- A$brand[A$brand %in% brand_5$Var1]
A$brand_5[!A$brand %in% brand_5$Var1] <- "<5 stations brand"
brand_table_5 <- as.data.frame(table(A$brand_5))


write.csv(x = A, file = "2024-04-25-stations-modify-2-cleaned-brands.csv")
