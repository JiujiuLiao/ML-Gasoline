setwd("C:/TU/EmpiricalMethodsSpatial/GasStation/data")
Sys.setenv(LANG="en")
options(digits=15) # stops R from writing big numbers as 14*e9 and write them out instead

#reading data
stations <- read.csv("2024-04-25-stations-modify-2.csv")
prices <- read.csv("2024-04-25-BB-prices.csv")

prices[,2] <- as.POSIXct(prices[,2])

####### AVERAGE PRICE FUNCTION ######################
as.numeric(min(prices[,2]))
# 00:00 25.04 => 1713996000

#testprice <- prices[prices$station_uuid=="ec18ae16-4359-49d5-acbb-3b5e31d214aa",]

average_price <- function(id, fueltype){
  #initializing variables to be used later
  averages <- NA
  last_price <- NA
  testing <- NA
  #iterating over 25 steps 
  for (i in 1:25){
    averages[i] <- NA
    # 1713996000 is 00:00 25.04.24
    # We add 3600 sec (1 hour) times the iterated step to get a start and end time for the period we look at
    starter <- 1713996000 + (i-1)*3600
    end <- starter + 3600
    # cutting 
    within_price_changes <- testprice[testprice$date <= end & testprice$date >= starter,]
    
    #very first price to be set, before this price we have no information for the prices of the given gas station
    if (nrow(within_price_changes) != 0 & is.na(last_price)){
      last_price <- within_price_changes[within_price_changes[,"date"] == max(within_price_changes[,"date"]),fueltype]
    }
    
    #if there is a price that has been set there are different cases for what can happen
    else if (is.na(last_price) == FALSE){
      
      if (nrow(within_price_changes) == 0){
        averages[i] <- last_price
      }
      else if (nrow(within_price_changes) == 1){
        averages[i] <- as.numeric(((as.numeric(within_price_changes[1,"date"]) - starter)) * last_price + 
                                    (end - as.numeric(within_price_changes[1,"date"])) * within_price_changes[1,fueltype]) /
          3600
      }
      else{
        first_part <-  ((as.numeric(within_price_changes[1,"date"]) - starter) * last_price ) /
          3600
        other_parts <- NA
        for (j in 1:(nrow(within_price_changes))){
          if (j == nrow(within_price_changes)){
            other_parts[j] <- ((end - as.numeric(within_price_changes[j,"date"])) * within_price_changes[j,fueltype]) /
              3600
          }
          else {
            other_parts[j] <- ((as.numeric(within_price_changes[(j+1),"date"]) - as.numeric(within_price_changes[j,"date"])) * within_price_changes[j,fueltype] ) /
              3600
          }
        }
        averages[i] <- sum(c(first_part, other_parts))
      }
    }
  }
  return(averages)
  #return(testing) #use in case it breaks and insert stuff like testing[i] <- i 
}

average_price("ec18ae16-4359-49d5-acbb-3b5e31d214aa","diesel")


##############ADDING AVERAGE PRICES TO STATION#######################

hourly_averages <- data.frame()

for (id in unique(stations$uuid)) {
  print(id)
}
